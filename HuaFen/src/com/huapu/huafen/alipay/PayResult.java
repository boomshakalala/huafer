package com.huapu.huafen.alipay;import java.util.Map;import com.huapu.huafen.beans.BaseResult;import android.text.TextUtils;public class PayResult extends BaseResult{	private String resultStatus;	private String result;	private String memo;	private String partner;	private String seller_id;	private String out_trade_no;	private String subject;	private String body;	private String total_fee;	private String notify_url;	private String payment_type;	private String _input_charset;	private String success;	private String sign_type;		public PayResult(Map<String, String> rawResult , boolean removeBrackets) {		if (rawResult == null) {			return;		}		for (String key : rawResult.keySet()) {			if (TextUtils.equals(key, "resultStatus")) {				resultStatus = rawResult.get(key);			} else if (TextUtils.equals(key, "result")) {				result = rawResult.get(key);			} else if (TextUtils.equals(key, "memo")) {				memo = rawResult.get(key);			}		}				String[] resultValue = result.split("&");				for (String value : resultValue) {			if (value.startsWith("partner")) {				partner = removeBrackets(getValue("partner=", value), removeBrackets);				continue;			}			if (value.startsWith("seller_id")) {				seller_id = removeBrackets(getValue("seller_id=", value), removeBrackets);				continue;			}			if (value.startsWith("out_trade_no")) {				out_trade_no = removeBrackets(getValue("out_trade_no=", value), removeBrackets);				continue;			}			if (value.startsWith("subject")) {				subject = removeBrackets(getValue("subject=", value), removeBrackets);				continue;			}			if (value.startsWith("body")) {				body = removeBrackets(getValue("body=", value), removeBrackets);				continue;			}			if (value.startsWith("total_fee")) {				total_fee = removeBrackets(getValue("total_fee=", value), removeBrackets);				continue;			}			if (value.startsWith("notify_url")) {				notify_url = removeBrackets(getValue("notify_url=", value), removeBrackets);				continue;			}			if (value.startsWith("payment_type")) {				payment_type = removeBrackets(getValue("payment_type=", value), removeBrackets);				continue;			}			if (value.startsWith("_input_charset")) {				_input_charset = removeBrackets(getValue("_input_charset=", value), removeBrackets);				continue;			}			if (value.startsWith("success")) {				success = removeBrackets(getValue("success=", value), removeBrackets);				continue;			}			if (value.startsWith("sign_type")) {				sign_type = removeBrackets(getValue("sign_type=", value), removeBrackets);				continue;			}								}	}	public String getPartner() {		return partner;	}	public void setPartner(String partner) {		this.partner = partner;	}	public String getSeller_id() {		return seller_id;	}	public void setSeller_id(String seller_id) {		this.seller_id = seller_id;	}	public String getOut_trade_no() {		return out_trade_no;	}	public void setOut_trade_no(String out_trade_no) {		this.out_trade_no = out_trade_no;	}	public String getSubject() {		return subject;	}	public void setSubject(String subject) {		this.subject = subject;	}	public String getBody() {		return body;	}	public void setBody(String body) {		this.body = body;	}	public String getTotal_fee() {		return total_fee;	}	public void setTotal_fee(String total_fee) {		this.total_fee = total_fee;	}	public String getNotify_url() {		return notify_url;	}	public void setNotify_url(String notify_url) {		this.notify_url = notify_url;	}	public String getPayment_type() {		return payment_type;	}	public void setPayment_type(String payment_type) {		this.payment_type = payment_type;	}	public String get_input_charset() {		return _input_charset;	}	public void set_input_charset(String _input_charset) {		this._input_charset = _input_charset;	}	public String getSuccess() {		return success;	}	public void setSuccess(String success) {		this.success = success;	}	public String getSign_type() {		return sign_type;	}	public void setSign_type(String sign_type) {		this.sign_type = sign_type;	}	public void setResultStatus(String resultStatus) {		this.resultStatus = resultStatus;	}	public void setResult(String result) {		this.result = result;	}	public void setMemo(String memo) {		this.memo = memo;	}		@Override	public String toString() {		return "PayResult [resultStatus=" + resultStatus + ", result=" + result + ", memo=" + memo + ", partner="				+ partner + ", seller_id=" + seller_id + ", out_trade_no=" + out_trade_no + ", subject=" + subject				+ ", body=" + body + ", total_fee=" + total_fee + ", notify_url=" + notify_url + ", payment_type="				+ payment_type + ", _input_charset=" + _input_charset + ", success=" + success + ", sign_type="				+ sign_type + "]";	}	/**	 * @return the resultStatus	 */	public String getResultStatus() {		return resultStatus;	}	/**	 * @return the memo	 */	public String getMemo() {		return memo;	}	/**	 * @return the result	 */	public String getResult() {		return result;	}		private String removeBrackets(String str, boolean remove) {		if (remove) {			if (!TextUtils.isEmpty(str)) {				if (str.startsWith("\"")) {					str = str.replaceFirst("\"", "");				}				if (str.endsWith("\"")) {					str = str.substring(0, str.length() - 1);				}			}		}		return str;	}		private String getValue(String header, String data) {		return data.substring(header.length(), data.length());	}}